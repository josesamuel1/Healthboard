# Generated by Django 5.1 on 2024-11-05 04:04

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlocoCirurgico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data deste formulário')),
                ('cirurgias_normais', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Cirurgias não pode ser inferior a zero.')], verbose_name='Cirurgias Eletivas Normais')),
                ('cirurgias_suspensas', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Cirurgias não pode ser inferior a zero.')], verbose_name='Cirurgias Eletivas Suspensas')),
                ('cirurgias_emergencias', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Cirurgias não pode ser inferior a zero.')], verbose_name='Cirurgias Eletivas de Emergência')),
                ('observacoes', models.TextField(default='', help_text='Caso uma ou mais cirurgias tenham sido suspensas, favor justificar a suspensão das mesmas.', max_length=127, verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'bloco cirúrgico',
                'verbose_name_plural': 'blocos cirúrgicos',
                'ordering': ['data', 'enfermeiro'],
            },
        ),
        migrations.CreateModel(
            name='ClassificacaoDeRisco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data deste formulário')),
                ('pacientes_vermelho', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Pacientes não pode ser inferior a zero.')], verbose_name='Pacientes com risco Vermelho')),
                ('pacientes_laranja', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Pacientes não pode ser inferior a zero.')], verbose_name='Pacientes com risco Laranja')),
                ('pacientes_amarelo', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Pacientes não pode ser inferior a zero.')], verbose_name='Pacientes com risco Amarelo')),
                ('pacientes_verde', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Pacientes não pode ser inferior a zero.')], verbose_name='Pacientes com risco Verde')),
                ('pacientes_azul', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Pacientes não pode ser inferior a zero.')], verbose_name='Pacientes com risco Azul')),
            ],
            options={
                'verbose_name': 'classificação de risco',
                'verbose_name_plural': 'classificações de risco',
                'ordering': ['data', 'enfermeiro'],
            },
        ),
        migrations.CreateModel(
            name='UnidadeDeInternacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloco', models.CharField(choices=[('blocoCM', 'Clínica Médica'), ('blocoCC', 'Clínica Cirúrgica'), ('blocoUTI', 'UTI')], max_length=127, verbose_name='Bloco Referente')),
                ('data', models.DateTimeField(verbose_name='Data deste formulário')),
                ('leitos_fixos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Leitos não pode ser inferior a zero.')], verbose_name='Leitos Fixos')),
                ('leitos_bloqueados', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Leitos não pode ser inferior a zero.')], verbose_name='Leitos Bloqueados')),
                ('leitos_extras', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Leitos não pode ser inferior a zero.')], verbose_name='Leitos Extras')),
                ('pacientes_internos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Pacientes não pode ser inferior a zero.')], verbose_name='Pacientes Internos')),
                ('entradas_novas', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Entradas não pode ser inferior a zero.')], verbose_name='Entradas Novas')),
                ('entradas_transf_interna', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Entradas não pode ser inferior a zero.')], verbose_name='Entradas por Transferência Interna')),
                ('saidas_alta', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Entradas não pode ser inferior a zero.')], verbose_name='Saídas por Alta')),
                ('saidas_transf_interna', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Saídas não pode ser inferior a zero.')], verbose_name='Saídas por Transferência Interna')),
                ('saidas_transf_externa', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Saídas não pode ser inferior a zero.')], verbose_name='Saídas por Transferência Externa')),
                ('saidas_obitos_mais24h', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Saídas não pode ser inferior a zero.')], verbose_name='Saídas por Óbitos acima de 24h')),
                ('saidas_obitos_menos24h', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Saídas não pode ser inferior a zero.')], verbose_name='Saídas por Óbitos abaixo de 24h')),
                ('saidas_desistencias', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Número de Saídas não pode ser inferior a zero.')], verbose_name='Saídas por Desistência')),
            ],
            options={
                'verbose_name': 'unidade de internação',
                'verbose_name_plural': 'unidades de internação',
                'ordering': ['data', 'bloco', 'enfermeiro'],
            },
        ),
    ]
